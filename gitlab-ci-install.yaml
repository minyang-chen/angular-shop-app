stages:
  - dependencies
  - quality
  - assemble
  - deploy

install:
  image: node:18-alpine
  stage: dependencies
  script:
    - npm ci --cache .npm --prefer-offline
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules

lint:
  image: node:18-alpine
  stage: quality
  needs: [ 'install' ]
  script:
    - npm run lint
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull

test:
  image: node:18-alpine
  stage: quality
  needs: [ 'install' ]
  script:
    - npm run test
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull

assemble:
  image: node:18-alpine
  stage: assemble
  needs: [ 'test', 'lint' ]
  script:
    - npm run build
  artifacts:
    paths:
      - $CI_PROJECT_DIR/dist
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull

.deploy:
  image: python:latest
  stage: deploy
  needs: [ 'assemble' ]
  before_script:
    - pip install awscli

deploy-dev:

  extends: .deploy
  only: [ 'main' ]
  variables:
    AWS_PROFILE: development
  script:
    - cp ./src/assets/config/app-config.dev.json ./dist/assets/config/app-config.json
    - aws s3 sync ./dist s3://$DEV_S3_UI_BUCKET/ --delete

deploy-staging:
  extends: .deploy
  rules:
    - when: manual
      allow_failure: true
  variables:
    AWS_PROFILE: staging
  script:
    - cp ./src/assets/config/app-config.staging.json ./dist/assets/config/app-config.json
    - aws s3 sync ./dist s3://$STAGING_S3_UI_BUCKET/ --delete
